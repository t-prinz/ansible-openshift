---
#
# For reference, create the install-config file by running
#
#   ./openshift-install create install-config --dir <installation_directory>

- name: Playbooks to provision a new cluster in AWS using the IPI method
  hosts: "{{ hostlist | default('all') }}"
  gather_facts: false
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_ocp_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_ocp_secret_access_key }}"

  tasks:
    - name: Check that mandatory variables are defined
      ansible.builtin.assert:
        fail_msg: |+
          The following variables must be defined (examples provided):
            ocp_bastion_node: "bastion.example.com"
            ocp_baseDomain: "example.com"
            ocp_computenode_replicas: "3"
            ocp_controlPlane_replicas: "3"
            ocp_clustername: "mynewocpcluster"
            ocp_aws_region: "us-east-1"
            ocp_pullSecret: "my-pull-secret"
            ocp_sshKey: "my-public-ssh-key"
            ocp_clusterinfo_dir: "./"
            aws_ocp_access_key_id: "your AWS_ACCESS_KEY_ID"
            aws_ocp_secret_access_key: "your AWS_SECRET_ACCESS_KEY"
        that:
          - ocp_bastion_node is defined
          - ocp_baseDomain is defined
          - ocp_computenode_replicas is defined
          - ocp_controlPlane_replicas is defined
          - ocp_clustername is defined
          - ocp_aws_region is defined
          - ocp_pullSecret is defined
          - ocp_sshKey is defined
          - ocp_clusterinfo_dir is defined
          - aws_ocp_access_key_id: "your AWS_ACCESS_KEY_ID"
          - aws_ocp_secret_access_key: "your AWS_SECRET_ACCESS_KEY"

    - name: Block to provision the cluster from the bastion node
      block:

        - name: Print cluster information
          ansible.builtin.debug:
            msg: "Creating cluster {{ ocp_clustername }}.{{ ocp_baseDomain }}"

        - name: Print inventory hostname
          ansible.builtin.debug:
            msg: "Inventory hostname {{ inventory_hostname }}"

        - name: Ensure the base directory holding the cluster provisioning information is created
          ansible.builtin.file:
            path: "{{ ocp_clusterinfo_dir }}"
            state: "directory"

        - name: Ensure the config directory is created
          ansible.builtin.file:
            path: "{{ ocp_clusterinfo_dir }}/config"
            state: "directory"

        - name: Ensure the install-config.yaml file is created
          ansible.builtin.template:
            dest: "{{ ocp_clusterinfo_dir }}/config/install-config.yaml"
            src: "install-config.yaml.j2"

        - name: Ensure the installer file is present
          ansible.builtin.unarchive:
            dest: "{{ ocp_clusterinfo_dir }}"
            mode: '0755'
            src: files/openshift-install-linux.tar.gz

        - name: Ensure the AWS key is reflected
          ansible.builtin.command:
            chdir: "{{ ocp_clusterinfo_dir }}"
            cmd: "echo ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}"
          register: aws_key_output

        - name: Print AWS key info
          ansible.builtin.debug:
            var: aws_key_output
            verbosity: 1

        - name: Command to run
          ansible.builtin.debug:
            msg: "./openshift-install create cluster --dir {{ ocp_clusterinfo_dir }}/config --log-level=info"

        - name: Create the cluster
          ansible.builtin.command:
            chdir: "{{ ocp_clusterinfo_dir }}"
            cmd: "./openshift-install create cluster --dir {{ ocp_clusterinfo_dir }}/config --log-level=info"

      delegate_to: "{{ ocp_bastion_node }}"
